<?php

/**
 * Implementation of hook_menu().
 */
function eventbrite_attendees_menu() {
  $items = array();
  $items['admin/settings/eventbrite-attendees'] = array(
    'title' => 'Eventbrite Configuration',
    'description' => 'Set API keys and data mappings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('eventbrite_attendees_configure_form'),
    'access arguments' => array('administer site configuration'),
  );
  $items['eventbrite/attendees'] = array(
    'title' => 'Event attendees',
    'page callback' => 'eventbrite_attendees_listing',
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Form builder for configuration form.
 */
function eventbrite_attendees_configure_form() {
  $form['basic'] = array(
    '#type' => 'fieldset',
    '#title' => t('Basic configuration'),
  );
  $form['basic']['eventbrite_attendees_user_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Eventbrite User key'),
    '#default_value' => variable_get('eventbrite_attendees_user_key', ''),
    '#description' => t('The unique string assigned by Eventbrite which identifies the user making an API call.'),
    '#required' => TRUE,
  );
  $form['basic']['eventbrite_attendees_app_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Eventbrite Application key'),
    '#default_value' => variable_get('eventbrite_attendees_app_key', ''),
    '#description' => t('The Eventbrite Application key for API calls (identifies this site).'),
    '#required' => TRUE,
  );
  $form['basic']['eventbrite_attendees_event_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Eventbrite Event Id'),
    '#default_value' => variable_get('eventbrite_attendees_event_id', ''),
    '#description' => t('The Eventbrite event ID for the event whose attendees you want to list.'),
    '#required' => TRUE,
  );
  $form['additional'] = array(
    '#type' => 'fieldset',
    '#title' => t('Additional configuration'),
  );
  $form['additional']['eventbrite_attendees_opt_out_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Eventbrite Opt Out Question Id'),
    '#default_value' => variable_get('eventbrite_attendees_opt_out_id', ''),
    '#description' => t('The Eventbrite question ID for the checkbox where the user may opt out of being listed.'),
  );
  $form['additional']['eventbrite_attendees_username_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Eventbrite Drupal.org username Question Id'),
    '#default_value' => variable_get('eventbrite_attendees_username_id', ''),
    '#description' => t('The Eventbrite question ID where attendess may enter their drupal.org username.'),
  );
  $form['additional']['eventbrite_attendees_sponsor_ticket_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Eventbrite Individual Sponsor Ticket Id'),
    '#default_value' => variable_get('eventbrite_attendees_sponsor_ticket_id', ''),
    '#description' => t('The Eventbrite ticket ID purchased by individual sponsors.'),
  );
  $form = system_settings_form($form);
  $form['#submit'][] = 'eventbrite_attendees_cache_clear';
  return $form;
}

/**
 * Clear cache entries.
 */
function eventbrite_attendees_cache_clear() {
  cache_clear_all('eventbrite_attendees:', 'cache', TRUE);
}

/**
 * Fetch and cache data from Eventbrite.
 */
function eventbrite_attendees_fetch() {
  $user_key = variable_get('eventbrite_attendees_user_key', '');
  $app_key = variable_get('eventbrite_attendees_app_key', '');
  $event_id = variable_get('eventbrite_attendees_event_id', '');
  if (empty($user_key) || empty($app_key) || empty($event_id)) {
    // Empty JSON.
    return '{}';
  }
  $data = NULL;
  $cid = 'eventbrite_attendees:event_list_attendees';
  $cache = cache_get($cid);
  if ($cache && isset($cache->data)) {
    $data = $cache->data;
  }
  if (!isset($data)) {
    $base_url = 'https://www.eventbrite.com/json/event_list_attendees?';
    $query = array();
    $query['page'] = 0;
    $query['id'] = $event_id;
    $query['app_key'] = $app_key;
    $query['user_key'] = $user_key;
    $url = $base_url . drupal_query_string_encode($query);
    $result = drupal_http_request($url);
    $data = $result->data;
    if ($result->code == 200) {
      cache_set($cid, $data, 'cache', CACHE_TEMPORARY);
    }
  }
  return $data;
}

/**
 * Page callback to display atendees.
 */
function eventbrite_attendees_listing() {
  $json = eventbrite_attendees_fetch();
  $data = json_decode($json);
  $output = '';
  $header = array(t('Name'), t('Company'), t('Website'));
  $sponsor_rows = array();
  $rows = array();
  $opt_out_id = variable_get('eventbrite_attendees_opt_out_id', '');
  $username_id = variable_get('eventbrite_attendees_username_id', '');
  if ($username_id) {
    $header[] = t('Drupal.org username');
  }
  $sponsor_ticket_id = variable_get('eventbrite_attendees_sponsor_ticket_id', '');
  if (isset($data->attendees) && is_array($data->attendees)) {
    foreach($data->attendees as $a) {
      $opt_out = FALSE;
      $username = '';
      if (is_array($a->attendee->answers)) {
        foreach ($a->attendee->answers as $ans) {
          if ($ans->answer->question_id == $opt_out_id && !empty($ans->answer->answer_text)) {
            $opt_out = TRUE;
          }
          if ($ans->answer->question_id == $username_id && !empty($ans->answer->answer_text)) {
            $username = $ans->answer->answer_text;
          }
        }
      }
      if ($opt_out) {
        continue;
      }
      $row = array();
      $row[] = check_plain($a->attendee->first_name) . ' ' . check_plain($a->attendee->last_name);
      $row[] = !empty($a->attendee->company) ? check_plain($a->attendee->company) : '';
      $row[] = !empty($a->attendee->website) ? l($a->attendee->website, $a->attendee->website) : '';
      if ($username_id) {
        $row[] = $username;
      }
      if ($sponsor_ticket_id && $sponsor_ticket_id == $a->attendee->ticket_id) {
        $sponsor_rows[] = $row;
      }
      else {
        $rows[] = $row;
      }
    }
  }
  if ($sponsor_rows) {
    $output .= theme('table', $header, $sponsor_rows, array(), t('Individual Sponsor attendees'));
  }
  return $output . theme('table', $header, $rows, array(), t('Regular Attendees'));
}